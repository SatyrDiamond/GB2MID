Multiple versions exist of this sound engine using different commands.

Version 1 (The Game of Harmony)
==============================================================================

Song table
=======================================
The song table is a series of 3 16-bit (2-byte) pointers to channel 1-3 for each song (channel 4 is not used for music).

Sequence commands
=======================================
Sequences for each channel use the following commands:
xx yy (X = 00-7F) = Play note, length (X = Note (0 = Rest), Y = Length)
xx (80-93) = Instrument data (increment until less than 40)
94 xx yy zz zz = Go to macro (X = ?, Y = Transpose, Z = Pointer)
95 = Return from macro
FE = End of channel (no loop)
FF = End of channel (loop)

Version 2 (Asteroids/Turrican)
==============================================================================

Song table
=======================================
Entries of the song table are structured as follows (pointers are little-endian):
1-2. Channel 1 pointer
3-4. Channel 2 pointer
5-6. Channel 3 pointer
7-16. ? (Unknown, but probably related to instruments)

Sequence commands
=======================================
Sequences for each channel use the following commands:
xx yy (X = 00-7C) = Play note, length (X = Note, Y = Length)
7D = End of channel (no loop)
7E = End of channel (loop)
7F xx = Rest
xx yy zz (X = 80-FF) = Play note, length, delay (X = Note, Y = Length, Z = Delay after)


Version 3 (Later games)
==============================================================================

Song table
=======================================
The song table is a series of 16-bit (2-byte) pointers to each song.

Song initialization
=======================================
Before the header of each song is 76 (0x4B) bytes which are likely used for information like the instruments of each channel.

Song header
=======================================
Each song has a header structured as follows:

1. Number of channels
2-3. Channel pointer (big-endian)
(Repeat 2-3. for each channel)

Sequence commands
=======================================
Sequences for each channel use the following commands:

(First 3 bytes of sequence) xx yy zz = Volume?
00-1D = Rest for length
1E xx (yy) = Rest (long) - If X is 0x80 or more, then multiply 128 by (X - 0x80) and then add Y; if X is less than 0x80 then Y is not present
1F xx = ?
xx yy (X = 20-83) = Play note, length (X = Note, Y = Length)
84-E7 = Play note with same length as previous
FB xx = No function?
FC = ?
FE = End of channel (1)
FF = End of channel (2)